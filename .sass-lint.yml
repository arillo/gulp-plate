options:
  merge-default-rules: true

files:
  include: 'src/sass/**/*.s+(a|c)ss'
  ignore:
    - 'src/sass/base/_sprite.scss'
    - 'src/sass/lib/mixins/_grid.sass'

rules:
  no-ids: 0
  force-element-nesting: 0
  property-sort-order: 0
  single-line-per-selector: 0
  no-important: 0
  no-vendor-prefixes: 0
  no-empty-rulesets: 0
  force-pseudo-nesting: 0
  no-qualifying-elements: 0
  no-warn: 0
  no-url-domains: 0
  no-url-protocols:
    - 1
    -
      allow-protocol-relative-urls: true

  nesting-depth:
    - 1
    -
      max-depth: 2

  mixins-before-declarations:
    - 1
    -
      exclude: ['mq']

  leading-zero:
    - 1
    -
      include: true

  no-color-literals:
    - 1
    -
      allow-rgba: true

  no-misspelled-properties:
  - 1
  -
    extra-properties:
      - 'overflow-scrolling'
      - 'flex-preferred-size'
      - 'interpolation-mode'

  quotes:
    - 1
    -
      style: single

  indentation:
    size: 2

  no-duplicate-properties:
    - 1
    -
      exclude:
        - src

  # Allow file extensions when importing files.
  # Reason: when using the `includePaths` option
  # for Sass and retrieving files from a dir that contains
  # both .scss & .css files with the same name, the Sass
  # compiler does not know what file to use (even though he
  # can't process .css files) and needs the extension to
  # know what file to use.
  clean-import-paths:
    filename-extension: true

  # @TODO update this rules with a appropriate
  # regex to enforce class naming style.
  class-name-format: 0
  variable-name-format: 0

  # Properties that should not be enforced
  # but that can be give some good insight
  # if uncommented temporally.
  no-mergeable-selectors: 0
  placeholder-in-extend: 0
